{"name": "Tes Fungsionalitas Kalkulator", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: Error executing adbExec. Original error: 'Command ''C:\\Users\\PC\\AppData\\Local\\Android\\Sdk\\platform-tools\\adb.exe' -P 5037 -s emulator-5554 shell 'settings delete global hidden_api_policy_pre_p_apps;settings delete global hidden_api_policy_p_apps;settings delete global hidden_api_policy'' exited with code 1'; Command output: adb.exe: device still authorizing\r\n\nStacktrace:\nUnknownError: Error executing adbExec. Original error: 'Command ''C:\\Users\\PC\\AppData\\Local\\Android\\Sdk\\platform-tools\\adb.exe' -P 5037 -s emulator-5554 shell 'settings delete global hidden_api_policy_pre_p_apps;settings delete global hidden_api_policy_p_apps;settings delete global hidden_api_policy'' exited with code 1'; Command output: adb.exe: device still authorizing\r\n\n    at getResponseForW3CError (C:\\Users\\PC\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\protocol\\errors.ts:1103:34)\n    at asyncHandler (C:\\Users\\PC\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\protocol\\protocol.ts:507:57)\nThe above error is caused by\nError: Error executing adbExec. Original error: 'Command ''C:\\Users\\PC\\AppData\\Local\\Android\\Sdk\\platform-tools\\adb.exe' -P 5037 -s emulator-5554 shell 'settings delete global hidden_api_policy_pre_p_apps;settings delete global hidden_api_policy_p_apps;settings delete global hidden_api_policy'' exited with code 1'; Command output: adb.exe: device still authorizing\r\n\n    at ChildProcess.<anonymous> (C:\\Users\\PC\\.appium\\node_modules\\appium-uiautomator2-driver\\node_modules\\teen_process\\lib\\exec.js:110:19)\n    at ChildProcess.emit (node:events:519:28)\n    at maybeClose (node:internal/child_process:1101:16)\n    at Process.ChildProcess._handle.onexit (node:internal/child_process:304:5)\n    at Process.callbackTrampoline (node:internal/async_hooks:130:17)", "trace": "@pytest.fixture(scope=\"session\")\n    def driver():\n        \"\"\"\n        Fixture ini akan berjalan sekali per sesi.\n        Tugasnya: Menyiapkan koneksi ke emulator & aplikasi, menjalankan tes, lalu menutup koneksi.\n        \"\"\"\n        # Siapkan Desired Capabilities menggunakan cara modern (Options)\n        appium_options = UiAutomator2Options()\n        appium_options.platform_name = \"Android\"\n        appium_options.device_name = \"Pixel 8\" # Sesuaikan jika nama emulator Anda berbeda\n        appium_options.app_package = \"com.google.android.calculator\"\n        appium_options.app_activity = \"com.android.calculator2.Calculator\"\n    \n        # Buat koneksi ke Appium Server\n        print(\"\\n--- Menghubungkan ke Appium Server & Emulator ---\")\n>       appium_driver = webdriver.Remote(\"http://localhost:4723\", options=appium_options)\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nconftest.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\appium\\webdriver\\webdriver.py:249: in __init__\n    super().__init__(\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:263: in __init__\n    self.start_session(capabilities)\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\appium\\webdriver\\webdriver.py:342: in start_session\n    response = self.execute(RemoteCommand.NEW_SESSION, w3c_caps)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:458: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000019847E84AD0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"Error executing adbExec. Original error: \\'Comm....onexit (node:internal/child_process:304:5)\\\\n    at Process.callbackTrampoline (node:internal/async_hooks:130:17)\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: Error executing adbExec. Original error: 'Command ''C:\\Users\\PC\\AppData\\Local\\Android\\Sdk\\platform-tools\\adb.exe' -P 5037 -s emulator-5554 shell 'settings delete global hidden_api_policy_pre_p_apps;settings delete global hidden_api_policy_p_apps;settings delete global hidden_api_policy'' exited with code 1'; Command output: adb.exe: device still authorizing\r\nE       \nE       Stacktrace:\nE       UnknownError: Error executing adbExec. Original error: 'Command ''C:\\Users\\PC\\AppData\\Local\\Android\\Sdk\\platform-tools\\adb.exe' -P 5037 -s emulator-5554 shell 'settings delete global hidden_api_policy_pre_p_apps;settings delete global hidden_api_policy_p_apps;settings delete global hidden_api_policy'' exited with code 1'; Command output: adb.exe: device still authorizing\r\nE       \nE           at getResponseForW3CError (C:\\Users\\PC\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\protocol\\errors.ts:1103:34)\nE           at asyncHandler (C:\\Users\\PC\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\protocol\\protocol.ts:507:57)\nE       The above error is caused by\nE       Error: Error executing adbExec. Original error: 'Command ''C:\\Users\\PC\\AppData\\Local\\Android\\Sdk\\platform-tools\\adb.exe' -P 5037 -s emulator-5554 shell 'settings delete global hidden_api_policy_pre_p_apps;settings delete global hidden_api_policy_p_apps;settings delete global hidden_api_policy'' exited with code 1'; Command output: adb.exe: device still authorizing\r\nE       \nE           at ChildProcess.<anonymous> (C:\\Users\\PC\\.appium\\node_modules\\appium-uiautomator2-driver\\node_modules\\teen_process\\lib\\exec.js:110:19)\nE           at ChildProcess.emit (node:events:519:28)\nE           at maybeClose (node:internal/child_process:1101:16)\nE           at Process.ChildProcess._handle.onexit (node:internal/child_process:304:5)\nE           at Process.callbackTrampoline (node:internal/async_hooks:130:17)\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: WebDriverException"}, "description": "\nSatu fungsi tes untuk menangani berbagai skenario perhitungan.\n", "parameters": [{"name": "num1", "value": "'9'"}, {"name": "operator", "value": "'-'"}, {"name": "num2", "value": "'3'"}, {"name": "expected_result", "value": "'6'"}], "start": 1760363318067, "stop": 1760363318067, "uuid": "566841e2-46c4-4490-96b8-1475b7480424", "historyId": "24804a8e3ee0a065a8be83dea50a9de4", "testCaseId": "e3d8a07ee16729dc5c5bbf8ff307470b", "fullName": "test_mobile_calculator#test_calculator_operations", "labels": [{"name": "suite", "value": "test_mobile_calculator"}, {"name": "host", "value": "CODE-ALPHA"}, {"name": "thread", "value": "20708-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_mobile_calculator"}], "titlePath": ["test_mobile_calculator.py"]}